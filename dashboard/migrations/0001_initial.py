# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-26 10:19
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100, verbose_name='Name')),
                ('aggreement_nbr', models.CharField(blank=True, max_length=30, verbose_name='Aggreement NBR')),
                ('edrpou_code', models.CharField(blank=True, max_length=12, verbose_name='EDRPOU Code')),
                ('mfo_code', models.CharField(blank=True, max_length=6, verbose_name='MFO')),
                ('account_nbr', models.CharField(blank=True, max_length=12, verbose_name='Account NBR')),
                ('client_addresses_quantity', models.IntegerField(verbose_name='Addresses quantity')),
                ('resp_person_first_name', models.CharField(blank=True, max_length=30, verbose_name='Responsible person first name')),
                ('resp_person_last_name', models.CharField(blank=True, max_length=30, verbose_name='Responsible person last name')),
                ('resp_person_middle_name', models.CharField(blank=True, max_length=30, verbose_name='Responsible person middle name')),
                ('passport_nbr', models.CharField(blank=True, max_length=30, verbose_name='Passport NBR')),
                ('identification_code', models.CharField(blank=True, max_length=12, verbose_name='Identification code')),
                ('registration_address', models.CharField(blank=True, max_length=200, verbose_name='Registration Address')),
                ('post_address', models.CharField(blank=True, max_length=200, verbose_name='Post Address')),
                ('bank_name', models.CharField(blank=True, max_length=50, verbose_name='Bank name')),
                ('client_email', models.EmailField(blank=True, max_length=254, verbose_name='Client e-mail address')),
                ('client_phone_nbr', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('client_details', models.TextField(blank=True, verbose_name='Client details')),
                ('client_discount_rate', models.IntegerField(default=0, verbose_name='Discount rate')),
                ('client_price_per_day', models.DecimalField(blank=True, decimal_places=2, max_digits=8)),
                ('created', models.DateTimeField(editable=False, verbose_name='Client added')),
                ('updated', models.DateTimeField(verbose_name='Client updated')),
            ],
            options={
                'verbose_name_plural': 'dashboard',
            },
        ),
        migrations.CreateModel(
            name='ClientsAddresses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=50, verbose_name='Location name')),
                ('address_city', models.CharField(blank=True, max_length=50, verbose_name='City')),
                ('address_street', models.CharField(blank=True, max_length=100, verbose_name='Street')),
                ('address_building', models.CharField(blank=True, max_length=10, verbose_name='Building')),
                ('address_details', models.TextField(blank=True, verbose_name='Address details')),
                ('geo_point', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Point')),
                ('created', models.DateTimeField(editable=False, verbose_name='Address added')),
                ('updated', models.DateTimeField(verbose_name='Address updated')),
                ('exchanges_per_week', models.DecimalField(choices=[(0.25, 0.25), (0.5, 0.5), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)], decimal_places=2, max_digits=3, verbose_name='Exchanges per week')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Clients')),
            ],
            options={
                'verbose_name_plural': 'clientAddresses',
            },
        ),
        migrations.CreateModel(
            name='Mats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mat_length', models.IntegerField(default=150, verbose_name='Length')),
                ('mat_width', models.IntegerField(default=85, verbose_name='Width')),
                ('mat_color', models.CharField(default='Granite', max_length=50, verbose_name='Color')),
                ('created', models.DateTimeField(editable=False, verbose_name='Mat added')),
                ('updated', models.DateTimeField(verbose_name='Mat updated')),
                ('clients_addresses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.ClientsAddresses')),
            ],
            options={
                'verbose_name_plural': 'mats',
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mat_length', models.IntegerField(default=150, verbose_name='Length')),
                ('mat_width', models.IntegerField(default=85, verbose_name='Width')),
                ('exchanges_per_week', models.DecimalField(choices=[(0.25, 0.25), (0.5, 0.5), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)], decimal_places=2, max_digits=3, verbose_name='Exchanges per week')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created', models.DateTimeField(editable=False, verbose_name='Price added')),
                ('updated', models.DateTimeField(verbose_name='Price updated')),
            ],
            options={
                'verbose_name_plural': 'priceList',
            },
        ),
    ]
